{"version":3,"file":"component---src-pages-blog-tsx-3956e0f82d70ab673d69.js","mappings":"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","sources":["webpack://lukas-bach/./src/components/atoms/big-list-item.tsx","webpack://lukas-bach/./src/components/atoms/category-text.tsx","webpack://lukas-bach/./src/components/atoms/page-header.tsx","webpack://lukas-bach/./src/components/layouts/page-layout.tsx","webpack://lukas-bach/./src/pages/blog.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { Box, Grid, Text, Title } from \"@mantine/core\";\nimport { Link } from \"gatsby\";\n\nexport const BigListItem: FC<{\n  title: string;\n  text: string;\n  right: JSX.Element;\n  left: JSX.Element;\n  to: string;\n  target?: string;\n}> = ({ title, text, left, right, to, target }) => (\n  <Box\n    component={Link}\n    to={to}\n    target={target}\n    sx={theme => ({\n      display: \"block\",\n      fontSize: \"14px\",\n      borderRadius: theme.radius.lg,\n      color: theme.colors.gray[6],\n      cursor: \"pointer\",\n      textDecoration: \"none\",\n      \":focus\": {\n        outline: `2px solid ${theme.white}`,\n      },\n      \":hover\": {\n        backgroundColor: theme.colors.dark[9],\n      },\n    })}\n    mb={16}\n    px={32}\n    py={32}\n  >\n    <Grid>\n      <Grid.Col md={2}>{left}</Grid.Col>\n      <Grid.Col md={8}>\n        <Title order={4} size={24} color=\"white\" mt={-8} mb={8}>\n          {title}\n        </Title>\n        <Text>{text}</Text>\n      </Grid.Col>\n      <Grid.Col md={2} sx={{ textAlign: \"right\" }}>\n        {right}\n      </Grid.Col>\n    </Grid>\n  </Box>\n);\n","import React, { FC } from \"react\";\n\nexport const CategoryText: FC<{ children: string | null | undefined }> = ({ children }) => {\n  if (!children) {\n    return null;\n  }\n  switch (children) {\n    case \"edu\":\n      return <>Educational</>;\n    default:\n      // eslint-disable-next-line react/jsx-no-useless-fragment\n      return <>{children}</>;\n  }\n};\n","import React, { FC } from \"react\";\nimport { Box, Flex, Title } from \"@mantine/core\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport { HeaderBg } from \"./header-bg\";\nimport { ContentGrid } from \"./content-grid\";\nimport { HeaderLinks } from \"./header-links\";\n\nexport const PageHeader: FC = () => (\n  <HeaderBg maxHeight={200} bgOpacity={0.4} gradientStart={0.25}>\n    <ContentGrid>\n      <Flex py={32} sx={{ alignItems: \"center\" }}>\n        <Box\n          component={Link}\n          to=\"/\"\n          display=\"flex\"\n          sx={theme => ({\n            color: theme.white,\n            textDecoration: \"none\",\n            flexGrow: 1,\n            alignItems: \"center\",\n            \":hover, :focus-visible\": {\n              outline: \"none\",\n              \" h1\": {\n                borderColor: theme.white,\n              },\n              \" [data-gatsby-image-wrapper]\": {\n                outline: `3px solid ${theme.white}`,\n                outlineOffset: \"4px\",\n              },\n            },\n          })}\n        >\n          <StaticImage\n            src=\"../../images/profile.jpg\"\n            alt=\"Profile Image\"\n            style={{ borderRadius: 999, minWidth: 64, width: 64, height: 64 }}\n          />\n          <Title\n            ml={32}\n            sx={{\n              borderBottom: `4px solid transparent`,\n              lineHeight: \"1.2em\",\n              fontSize: \"30px\",\n            }}\n          >\n            Lukas Bach\n          </Title>\n        </Box>\n        <HeaderLinks />\n      </Flex>\n    </ContentGrid>\n  </HeaderBg>\n);\n","import React, { FC, PropsWithChildren } from \"react\";\nimport { LayoutProvider } from \"./layout-provider\";\nimport { PageHeader } from \"../atoms/page-header\";\nimport { Footer } from \"../atoms/footer\";\n\nexport const PageLayout: FC<PropsWithChildren<{}>> = ({ children }) => (\n  <LayoutProvider>\n    <PageHeader />\n    {children}\n    <Footer />\n  </LayoutProvider>\n);\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Text, Title, Anchor } from \"@mantine/core\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { PageHead } from \"../components/atoms/page-head\";\nimport { ContentGrid } from \"../components/atoms/content-grid\";\nimport { PageLayout } from \"../components/layouts/page-layout\";\nimport { BigListItem } from \"../components/atoms/big-list-item\";\nimport { CategoryText } from \"../components/atoms/category-text\";\nimport { getBlogTarget } from \"../util\";\n\nconst useBlogEntries = () =>\n  useStaticQuery<Queries.AllBlogEntriesQuery>(graphql`\n    query AllBlogEntries {\n      site {\n        siteMetadata {\n          links {\n            medium\n          }\n        }\n      }\n      allMarkdownRemark(sort: { frontmatter: { date: DESC } }, filter: { frontmatter: { kind: { eq: \"blog\" } } }) {\n        nodes {\n          timeToRead\n          frontmatter {\n            slug\n            title\n            category\n            date(formatString: \"MMMM DD, YYYY\")\n            medium\n            devto\n          }\n          excerpt(truncate: true, format: PLAIN, pruneLength: 200)\n        }\n      }\n    }\n  `);\n\nconst Page: React.FC<PageProps> = () => {\n  const blogEntries = useBlogEntries();\n  return (\n    <PageLayout>\n      <ContentGrid>\n        <Title order={1} color=\"white\" mb={64}>\n          Blog\n        </Title>\n        <Text>\n          Subscribe to my{\" \"}\n          <Anchor href={blogEntries?.site?.siteMetadata?.links?.medium ?? \"\"} target=\"_blank\">\n            Medium Blog\n          </Anchor>{\" \"}\n          to get notified about new articles.\n        </Text>\n        {blogEntries.allMarkdownRemark.nodes.map(article => (\n          <BigListItem\n            key={article.frontmatter?.slug ?? \"\"}\n            title={article.frontmatter?.title ?? \"\"}\n            text={article.excerpt ?? \"\"}\n            left={\n              <Text>\n                <CategoryText>{article.frontmatter?.category}</CategoryText>\n              </Text>\n            }\n            right={\n              <>\n                <Text>{article.frontmatter?.date}</Text>\n                <Text>{article.timeToRead ?? 5} minutes</Text>\n              </>\n            }\n            to={getBlogTarget(article.frontmatter).href}\n            target={getBlogTarget(article.frontmatter).target}\n          />\n        ))}\n      </ContentGrid>\n    </PageLayout>\n  );\n};\n\nexport default Page;\n\nexport const Head: HeadFC = () => (\n  <PageHead\n    title=\"Projects\"\n    description=\"Blog articles on software engineering and frontend development that I have written.\"\n  />\n);\n"],"names":["BigListItem","_ref","title","text","left","right","to","target","React","Box","component","Link","sx","theme","display","fontSize","borderRadius","radius","lg","color","colors","gray","cursor","textDecoration","outline","white","backgroundColor","dark","mb","px","py","Grid","md","Title","order","size","mt","Text","textAlign","CategoryText","children","PageHeader","HeaderBg","maxHeight","bgOpacity","gradientStart","ContentGrid","Flex","alignItems","flexGrow","borderColor","outlineOffset","StaticImage","src","alt","style","minWidth","width","height","ml","borderBottom","lineHeight","HeaderLinks","PageLayout","LayoutProvider","Footer","blogEntries","useStaticQuery","Anchor","href","site","_blogEntries$site","siteMetadata","_blogEntries$site$sit2","links","_blogEntries$site$sit3","medium","allMarkdownRemark","nodes","map","article","key","frontmatter","_article$frontmatter","slug","_article$frontmatter2","excerpt","_article$frontmatter3","category","_article$frontmatter4","date","timeToRead","getBlogTarget","Head","PageHead","description"],"sourceRoot":""}